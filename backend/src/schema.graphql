# this contains anything that will be publicly visible in the graphQL API

# vvvvv ALLOWS US TO USE DATATYPES FROM PRISMA WITHOUT REWRITING THEM HERE vvvvv
# import * from './generated/prisma.graphql'

# anything added here also needs a resolver elsewhere 

type SuccessMessage {
    message: String
}

type Mutation {
    createItem(
        title: String,
        description: String,
        price: Int,
        image: String,
        largeImage: String
    ): Item!
    updateItem(
        id: ID!,
        title: String,
        description: String,
        price: Int
    ): Item!
    deleteItem(
        id: ID!,
    ): Item!  
    signup(
        email: String!,
        password: String!,
        name: String!
    ): User!
    signin(
        email: String!,
        password: String!
    ): User!
    signout: SuccessMessage 
    requestReset(
        email: String!
    ): SuccessMessage
    resetPassword(
        resetToken: String!,
        password: String!,
        confirmPassword: String!
    ): User!
    updatePermissions(
        permissions: [Permission],
        userId: ID!
    ): User
    addToCart(
        id: ID!
    ): CartItem
}

type Query {
    items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int ): [Item]! 
    item(where: ItemWhereUniqueInput!): Item
    itemsConnection(where: ItemWhereInput): ItemConnection!
    me: User
    users: [User]!
}

# redefining User here to prevent things like password and reset tokens from being accessible on the front end
type User {
    id: ID!
    email: String!
    name: String!
    # orders(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Order!]
    # cart(where: CartItemWhereInput, orderBy: CartItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CartItem!]
    # createdAt: DateTime!
    # updatedAt: DateTime!
    permissions: [Permission!]
    cart: [CartItem!]! 
}