{"version":3,"file":"static/webpack/static/development/pages/sell.js.8c864fc928b4a7c36530.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\n\nconst CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String\n        $largeImage: String\n    ){\n        createItem (\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        ) {\n            id\n        }\n    }\n`;// end const CREATE_ITEM_MUTATION\n\nclass CreateItem extends Component {\n    state = {\n        title: '',\n        decription: '',\n        image: '',\n        largeImage: '',\n        price: 0\n    };\n\n    handleChange = (e) => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        console.log({ name, type, value });\n\n        this.setState({ [name]: val });\n    }\n\n    uploadFile = async e => {\n        console.log(`uploadin'...`);\n        const files = e.target.files;\n        const data = new FormData();\n        data.append('file', files[0]);\n        data.append('upload_preset', 'sickfits');\n\n        const res = await fetch('https://api.cloudinary.com/v1_1/dcrq0v21d/image/upload', {\n            method: 'POST',\n            body: data\n        });\n\n        const file = await res.json();\n        console.log(file);\n        this.setState({\n            image: file.secure_url,\n            largeImage: file.eager[0].secure_url,\n        }); \n    }//end uploadFile\n\n    render() {\n        return (\n            <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\n                {(createItem, { loading, error }) => (\n\n                    <Form onSubmit={async e => {\n                        //vvv stop form from submitting vvv\n                        e.preventDefault();\n                        //vvv call the mutation vvv\n                        const res = await createItem();\n                        //vvv move user to single item page for item they just submitted vvv\n                        console.log(res);\n                        Router.push({\n                            pathname: '/item',\n                            query: {id: res.data.createItem.id }\n                        })\n                    }}>\n                        <Error error={error}/>\n                        <fieldset disabled={loading} aria-busy={loading}>\n                            <label htmlFor=\"file\">\n                                Image\n                                <input\n                                    type=\"file\"\n                                    id=\"file\"\n                                    name=\"file\"\n                                    placeholder=\"Upload an image\"\n                                    required\n                                    value={this.state.image}\n                                    onChange={this.uploadFile}\n                                />\n                            </label>\n                            <label htmlFor=\"title\">\n                                Title\n                                <input\n                                    type=\"text\"\n                                    id=\"title\"\n                                    name=\"title\"\n                                    placeholder=\"Title\"\n                                    required\n                                    value={this.state.title}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                            <label htmlFor=\"price\">\n                                Price\n                                <input\n                                    type=\"number\"\n                                    id=\"price\"\n                                    name=\"price\"\n                                    placeholder=\"Price\"\n                                    required\n                                    value={this.state.price}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                            <label htmlFor=\"description\">\n                                <textarea\n                                    type=\"text\"\n                                    id=\"description\"\n                                    name=\"description\"\n                                    placeholder=\"Tell us about this thing.\"\n                                    required\n                                    value={this.state.description}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                            <button type=\"submit\">Submit It!</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        )// end return\n    }\n}// end class CreateItem extends Component\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION }; "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAQA;AACA;AAFA;AACA;AARA;AAOA;AAPA;AAAA;AACA;AADA;AAYA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAiqEA;;;;AA7GA;AACA;AACA;AA8GA;;;;;A","sourceRoot":""}