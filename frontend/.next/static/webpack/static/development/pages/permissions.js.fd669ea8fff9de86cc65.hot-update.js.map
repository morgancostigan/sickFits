{"version":3,"file":"static/webpack/static/development/pages/permissions.js.fd669ea8fff9de86cc65.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n    'USER',\n    'ADMIN',\n    'ITEMCREATE',\n    'ITEMUPDATE',\n    'ITEMDELETE',\n    'PERMISSIONUPDATE'\n];\n\nconst ALL_USERS_QUERY = gql `\n    query {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nconst Permissions = (props) => (\n    <Query query={ALL_USERS_QUERY}>\n        {({data, loading, error}) => \n        console.log(data) || (\n            <div>\n                <Error error={error} />\n                <div>\n                    <h1>Manage Permissions</h1>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Email</th>\n                                {possiblePermissions.map(permission => \n                                <th key={permission}>{permission}</th>)}\n                                <th>â‡©</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data.users.map(user => <UserPermissions user={user} key={user.id}/>)}\n                        </tbody>                    \n                    </Table>\n                </div>\n            </div>\n        )}\n    </Query>\n);//end const Permissions\n\nclass UserPermissions extends React.Component {\n    static propTypes = {\n        user: PropTypes.shape({\n            id: PropTypes.string,\n            name: PropTypes.string,\n            email: PropTypes.string,\n            permissions: PropTypes.array,\n        }).isRequired\n    };\n    state = {\n        //normally terrible to use props in setting state, but okay here as we are seeding it and and change will setState\n        permissions: this.props.user.permissions,\n    }\n    handlePermissionChange = e => {\n        const checkbox = e.target;\n        //make a copy of current permissions\n        const updatedPermissions = [...this.state.permissions];\n        console.log(updatedPermissions);\n        \n    }\n    render () {\n        const user = this.props.user;\n        return (\n            <tr>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                {possiblePermissions.map(permission => (\n                    <td key={permission}>\n                        <label htmlFor={`${user.id}-permission-${permission}`}>\n                            <input type=\"checkbox\" checked=\n                            {this.state.permissions.includes(permission)}\n                            value={permission}\n                            onChange={this.handlePermissionChange}\n                            />\n                        </label>\n                    </td>\n                ))}\n                <td>\n                    <SickButton>Update</SickButton>\n                </td>\n            </tr>\n        )\n    }\n}//end\n\nexport default Permissions;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAFA;AACA;AACA;AA0BA;;;;;;;;;;;;;;;;;;AASA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA1CA;AACA;AACA;AAFA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AA2CA;;;;A","sourceRoot":""}