{"version":3,"file":"static/webpack/static/development/pages/items.js.98badbbaa112a73f51cc.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\n  \nconst ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY(\n        $skip: Int = 0,\n        $first: Int = ${perPage}\n    ) {\n        items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n            id\n            title\n            description\n            price\n            image\n            largeImage\n        }\n    }\n`;\n\nconst Center = styled.div`\n    text-align: center;\n`///////////\n\nconst ItemsList = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 60px;\n    max-width: ${props => props.theme.maxWidth};\n    margin: 0 auto;\n`///////////\n \nclass Items extends Component {\n    render() {\n        return (\n            <Center>\n                <Pagination page={this.props.page}/>\n                {/* vvv the only allowed child of a query is a function vvv */}\n                <Query \n                    query={ALL_ITEMS_QUERY} \n                    fetchPolicy=\"network-only\" //\n                    variables={{\n                        skip: this.props.page * perPage - perPage, //these are the variables to determine how many items show up on the DOM \n                        // first: perPage, //not needed as it's implied above\n                    }}> \n                    {({ data, error, loading }) => {\n                        console.log({data});\n                        if (loading) return <p>loading...</p>\n                        if (error) return <p>Error: {error.message}</p>\n                        return <ItemsList>\n                                {data.items.map(item => <Item item={item} key={item.id}/>)}\n                            </ItemsList>\n                    }}\n                </Query>\n                <Pagination page={this.props.page}/>\n            </Center>\n        )\n    }\n}\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };\n "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAgBA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAGA;AACA;AACA;AACA;AAHA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAzBA;AACA;AA2BA;;;;;A","sourceRoot":""}