{"version":3,"file":"static/webpack/static/development/pages/reset.js.150a065b47830f2b678c.hot-update.js","sources":["webpack:///./components/Reset.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\n    resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Reset extends Component {\n    static propTypes = {\n        resetToken: PropTypes.string.isRequired,\n    };\n    state = {\n        password: '',\n        confirmPassword: '',\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    render() {\n        return (\n            <Mutation\n                mutation={RESET_MUTATION}\n                variables={{\n                    resetToken: this.props.resetToken,\n                    password: this.state.password,\n                    confirmPassword: this.state.confirmPassword,\n                }}\n                refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n            >\n                {(reset, { error, loading, called }) => (\n                    <Form\n                        method=\"post\"\n                        onSubmit={async e => {\n                            e.preventDefault();\n                            await reset();\n                            this.setState({ password: '', confirmPassword: '' });\n                        }}\n                    >\n                        <fieldset disabled={loading} aria-busy={loading}>\n                            <h2>Reset Your Password</h2>\n                            <Error error={error} />\n                            <label htmlFor=\"password\">\n                                Password\n                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n\n                            <label htmlFor=\"confirmPassword\">\n                                Confirm Your Password\n                <input\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    placeholder=\"confirmPassword\"\n                                    value={this.state.confirmPassword}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n\n                            <button type=\"submit\">Reset Your Password!</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default Reset;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlCA;AAwCA;;;;AA9DA;AACA;AADA;AAEA;AADA;AACA;AA+DA;;;;A","sourceRoot":""}