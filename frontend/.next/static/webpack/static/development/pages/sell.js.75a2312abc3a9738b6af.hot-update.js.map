{"version":3,"file":"static/webpack/static/development/pages/sell.js.75a2312abc3a9738b6af.hot-update.js","sources":["webpack:///./components/CreateItem.js","webpack:///./components/ErrorMessage.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from '../components/ErrorMessage';\n\nconst CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String\n        $largeImage: String\n    ){\n        createItem (\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        ) {\n            id\n        }\n    }\n`;// end const CREATE_ITEM_MUTATION\n\nclass CreateItem extends Component {\n    state = {\n        title: '',\n        decription: '',\n        image: '',\n        largeImage: '',\n        price: 0\n    };\n\n    handleChange = (e) => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        console.log({ name, type, value });\n\n        this.setState({ [name]: val });\n    }\n\n    render() {\n        return (\n            <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\n                {(createItem, { loading, error }) => (\n\n                    <Form onSubmit={(e) => {\n                        e.preventDefault();\n                        console.log(this.state);\n\n                    }}>\n                        <fieldset>\n                            <label htmlFor=\"title\">\n                                Title\n                        <input\n                                    type=\"text\"\n                                    id=\"title\"\n                                    name=\"title\"\n                                    placeholder=\"Title\"\n                                    required\n                                    value={this.state.title}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                            <label htmlFor=\"price\">\n                                Price\n                        <input\n                                    type=\"number\"\n                                    id=\"price\"\n                                    name=\"price\"\n                                    placeholder=\"Price\"\n                                    required\n                                    value={this.state.price}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                            <label htmlFor=\"decription\">\n                                <textarea\n                                    type=\"text\"\n                                    id=\"decription\"\n                                    name=\"decription\"\n                                    placeholder=\"Tell us about this thing.\"\n                                    required\n                                    value={this.state.decription}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                            <button type=\"submit\">Submit It!</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        )// end return\n    }\n}// end class CreateItem extends Component\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION }; ","import styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-left: 5px solid red;\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Shoot!</strong>\n          {error.message.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Shoot!</strong>\n        {error.message.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3CA;AAiDA;;;;AArEA;AACA;AACA;AAsEA;;;;;;;;;;;;;;;;;;;;ACnGA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;A","sourceRoot":""}