{"ast":null,"code":"import withApollo from 'next-with-apollo'; //works with next.js and apollo\n\nimport ApolloClient from 'apollo-boost'; //includes all of the apollo Links\n\nimport { endpoint } from '../config';\nimport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION } from '../components/Cart';\n\nfunction createClient({\n  headers\n}) {\n  return new ApolloClient({\n    uri: true ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers\n      });\n    },\n    //end request\n    //clientState is your local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, {\n            cache\n          }) {\n            //read cartOpen value in cache\n            const {\n              cartOpen\n            } = cache.readQuery({\n              query: LOCAL_STATE_QUERY\n            }); //write cart state to the opposite\n\n            const data = {\n              data: {\n                cartOpen: !cartOpen\n              }\n            };\n            cache.writeData(data);\n            return data;\n          }\n\n        }\n      },\n      defaults: {\n        cartOpen: true\n      }\n    } //end clientState\n\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master/sick-fits/frontend/lib/withData.js"],"names":["withApollo","ApolloClient","endpoint","LOCAL_STATE_QUERY","TOGGLE_CART_MUTATION","createClient","headers","uri","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","Mutation","toggleCart","_","variables","cache","cartOpen","readQuery","query","data","writeData","defaults"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB,C,CAA2C;;AAC3C,OAAOC,YAAP,MAAyB,cAAzB,C,CAAyC;;AACzC,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,oBAAxD;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAmC;AACjC,SAAO,IAAIL,YAAJ,CAAiB;AACtBM,IAAAA,GAAG,EAAE,OAAyCL,QAAzC,GAAoDA,QADnC;AAEtBM,IAAAA,OAAO,EAAEC,SAAS,IAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBN,QAAAA;AAJmB,OAArB;AAMD,KATqB;AASpB;AACF;AACAO,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,CAACC,CAAD,EAAIC,SAAJ,EAAe;AAACC,YAAAA;AAAD,WAAf,EAAwB;AAChC;AACA,kBAAM;AAACC,cAAAA;AAAD,gBAAaD,KAAK,CAACE,SAAN,CAAgB;AACjCC,cAAAA,KAAK,EAAEnB;AAD0B,aAAhB,CAAnB,CAFgC,CAKhC;;AACA,kBAAMoB,IAAI,GAAG;AACXA,cAAAA,IAAI,EAAE;AACJH,gBAAAA,QAAQ,EAAE,CAACA;AADP;AADK,aAAb;AAKAD,YAAAA,KAAK,CAACK,SAAN,CAAgBD,IAAhB;AACA,mBAAOA,IAAP;AACD;;AAdO;AADD,OADA;AAmBXE,MAAAA,QAAQ,EAAE;AACRL,QAAAA,QAAQ,EAAE;AADF;AAnBC,KAXS,CAiCrB;;AAjCqB,GAAjB,CAAP;AAmCD;;AAED,eAAepB,UAAU,CAACK,YAAD,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo'; //works with next.js and apollo\nimport ApolloClient from 'apollo-boost'; //includes all of the apollo Links\nimport { endpoint } from '../config'; \nimport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION } from '../components/Cart';\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      });\n    },//end request\n    //clientState is your local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, {cache}) {\n            //read cartOpen value in cache\n            const {cartOpen} = cache.readQuery({\n              query: LOCAL_STATE_QUERY,\n            });\n            //write cart state to the opposite\n            const data = {\n              data: {\n                cartOpen: !cartOpen\n              },\n            };\n            cache.writeData(data);\n            return data;\n          },\n        },\n      },\n      defaults: {\n        cartOpen: true,\n      }\n    }//end clientState\n  });\n}\n\nexport default withApollo(createClient);\n"]},"metadata":{},"sourceType":"module"}