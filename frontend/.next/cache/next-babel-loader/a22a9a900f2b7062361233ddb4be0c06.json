{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master/sick-fits/frontend/components/AddToCart.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation addToCart( $id: ID! ) {\\n        addToCart(id: $id) {\\n            id \\n            quantity\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nvar ADD_TO_CART_MUTATION = gql(_templateObject()); //end ADD_TO_CART_MUTATION\n\nvar AddToCart = /*#__PURE__*/function (_Component) {\n  _inherits(AddToCart, _Component);\n\n  var _super = _createSuper(AddToCart);\n\n  function AddToCart() {\n    _classCallCheck(this, AddToCart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AddToCart, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var id = this.props.id;\n      return __jsx(Mutation, {\n        mutation: ADD_TO_CART_MUTATION,\n        variables: {\n          id: id\n        },\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }\n      }, function (addToCart, _ref) {\n        var error = _ref.error,\n            loading = _ref.loading;\n        return __jsx(\"button\", {\n          disabled: loading,\n          onClick: addToCart,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }\n        }, \"Add\", loading && 'ing', \" To Cart\");\n      });\n    }\n  }]);\n\n  return AddToCart;\n}(Component);\n\n; //end class AddToCart\n\nexport default AddToCart;","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master/sick-fits/frontend/components/AddToCart.js"],"names":["React","Component","Mutation","gql","CURRENT_USER_QUERY","ADD_TO_CART_MUTATION","AddToCart","id","props","query","addToCart","error","loading"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,IAAMC,oBAAoB,GAAGF,GAAH,mBAA1B,C,CAOE;;IAEIG,S;;;;;;;;;;;;;6BACO;AAAA;;AAAA,UACGC,EADH,GACU,KAAKC,KADf,CACGD,EADH;AAEL,aAAO,MAAC,QAAD;AAAU,QAAA,QAAQ,EAAEF,oBAApB;AACP,QAAA,SAAS,EAAE;AAAEE,UAAAA,EAAE,EAAFA;AAAF,SADJ;AAEP,QAAA,cAAc,EAAE,CAAC;AAACE,UAAAA,KAAK,EAAEL;AAAR,SAAD,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGF,UAACM,SAAD;AAAA,YAAaC,KAAb,QAAaA,KAAb;AAAA,YAAoBC,OAApB,QAAoBA,OAApB;AAAA,eACG;AAAQ,UAAA,QAAQ,EAAEA,OAAlB;AAA2B,UAAA,OAAO,EAAEF,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmDE,OAAO,IAAI,KAA9D,aADH;AAAA,OAHE,CAAP;AAOH;;;;EAVmBX,S;;AAWvB,C,CAAC;;AAEF,eAAeK,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst ADD_TO_CART_MUTATION = gql `\n    mutation addToCart( $id: ID! ) {\n        addToCart(id: $id) {\n            id \n            quantity\n        }\n    }\n`;//end ADD_TO_CART_MUTATION\n\nclass AddToCart extends Component{\n    render() {\n        const { id } = this.props;\n        return <Mutation mutation={ADD_TO_CART_MUTATION} \n        variables={{ id }}\n        refetchQueries={[{query: CURRENT_USER_QUERY}]}>\n            {(addToCart, {error, loading }) => (\n                <button disabled={loading} onClick={addToCart}>Add{loading && 'ing'} To Cart</button>\n            )}\n        </Mutation>\n    }\n};//end class AddToCart\n\nexport default AddToCart;"]},"metadata":{},"sourceType":"module"}