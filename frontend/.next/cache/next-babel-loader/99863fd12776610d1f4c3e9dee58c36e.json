{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master/sick-fits/frontend/components/Items.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\nconst ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY(\n        $skip: Int = 0,\n        $first: Int = ${perPage}\n    ) {\n        items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n            id\n            title\n            description\n            price\n            image\n            largeImage\n        }\n    }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"Items__Center\",\n  componentId: \"tikday-0\"\n})([\"text-align:center;\"]); ///////////\n\nconst ItemsList = styled.div.withConfig({\n  displayName: \"Items__ItemsList\",\n  componentId: \"tikday-1\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;max-width:\", \";margin:0 auto;\"], props => props.theme.maxWidth); ///////////\n\nclass Items extends Component {\n  render() {\n    return __jsx(Center, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, __jsx(Pagination, {\n      page: this.props.page,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }), __jsx(Query, {\n      query: ALL_ITEMS_QUERY // fetchPolicy=\"network-only\" //gets data from server every time we change page, negating benefits of cache \n      ,\n      variables: {\n        skip: this.props.page * perPage - perPage //these are the variables to determine how many items show up on the DOM \n        // first: perPage, //not needed as it's implied above\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      // console.log({data});\n      if (loading) return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 45\n        }\n      }, \"loading...\");\n      if (error) return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 43\n        }\n      }, \"Error: \", error.message);\n      return __jsx(ItemsList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 32\n        }\n      }, data.items.map(item => __jsx(Item, {\n        item: item,\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 57\n        }\n      })));\n    }), __jsx(Pagination, {\n      page: this.props.page,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master/sick-fits/frontend/components/Items.js"],"names":["React","Component","Query","gql","styled","Item","Pagination","perPage","ALL_ITEMS_QUERY","Center","div","ItemsList","props","theme","maxWidth","Items","render","page","skip","data","error","loading","message","items","map","item","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,eAAe,GAAGL,GAAI;;;wBAGJI,OAAQ;;;;;;;;;;;CAHhC;AAgBA,MAAME,MAAM,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,0BAAZ,C,CAEC;;AAED,MAAMC,SAAS,GAAGP,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,+FAIEE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QAJvB,CAAf,C,CAMC;;AAED,MAAMC,KAAN,SAAoBd,SAApB,CAA8B;AAC1Be,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,MAAC,KAAD;AACI,MAAA,KAAK,EAAET,eADX,CAEI;AAFJ;AAGI,MAAA,SAAS,EAAE;AACPU,QAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWK,IAAX,GAAkBV,OAAlB,GAA4BA,OAD3B,CACoC;AAC3C;;AAFO,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOK,CAAC;AAAEY,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAD,KAA8B;AAC3B;AACA,UAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,aAAO,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEH,IAAI,CAACI,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,GAAG,EAAEA,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,CADF,CAAP;AAGH,KAdL,CAHJ,EAmBI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWK,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,CADJ;AAuBH;;AAzByB;;AA4B9B,eAAeF,KAAf;AACA,SAASP,eAAT","sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport Pagination from './Pagination';\nimport { perPage } from '../config';\n  \nconst ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY(\n        $skip: Int = 0,\n        $first: Int = ${perPage}\n    ) {\n        items(first: $first, skip: $skip, orderBy: createdAt_DESC) {\n            id\n            title\n            description\n            price\n            image\n            largeImage\n        }\n    }\n`;\n\nconst Center = styled.div`\n    text-align: center;\n`///////////\n\nconst ItemsList = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 60px;\n    max-width: ${props => props.theme.maxWidth};\n    margin: 0 auto;\n`///////////\n \nclass Items extends Component {\n    render() {\n        return (\n            <Center>\n                <Pagination page={this.props.page}/>\n                {/* vvv the only allowed child of a query is a function vvv */}\n                <Query \n                    query={ALL_ITEMS_QUERY} \n                    // fetchPolicy=\"network-only\" //gets data from server every time we change page, negating benefits of cache \n                    variables={{\n                        skip: this.props.page * perPage - perPage, //these are the variables to determine how many items show up on the DOM \n                        // first: perPage, //not needed as it's implied above\n                    }}> \n                    {({ data, error, loading }) => {\n                        // console.log({data});\n                        if (loading) return <p>loading...</p>\n                        if (error) return <p>Error: {error.message}</p>\n                        return <ItemsList>\n                                {data.items.map(item => <Item item={item} key={item.id}/>)}\n                            </ItemsList>\n                    }}\n                </Query>\n                <Pagination page={this.props.page}/>\n            </Center>\n        )\n    }\n}\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };\n "]},"metadata":{},"sourceType":"module"}