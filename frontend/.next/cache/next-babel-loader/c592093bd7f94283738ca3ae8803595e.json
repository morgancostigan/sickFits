{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/Tier-4/Advanced-React-master/sick-fits/frontend/components/RemoveFromCart.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation removeFromCart($id: ID!) {\\n        removeFromCart(id: $id) {\\n            # to remove from cache\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\nvar REMOVE_FROM_CART_MUTATION = gql(_templateObject()); //end REMOVE_FROM_CART_MUTATION\n\nvar BigButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__BigButton\",\n  componentId: \"emvtd6-0\"\n})([\"font-size:3rem;background:none;border:0;&:hover{color:\", \";cursor:pointer;}\"], function (props) {\n  return props.theme.red;\n}); //end BigButton\n\n_c = BigButton;\n\nvar RemoveFromCart = /*#__PURE__*/function (_Component) {\n  _inherits(RemoveFromCart, _Component);\n\n  var _super = _createSuper(RemoveFromCart);\n\n  function RemoveFromCart() {\n    var _this;\n\n    _classCallCheck(this, RemoveFromCart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (cache, payload) {\n      console.log('running remove from cart update function'); //1 read the cache\n\n      var data = cache.readQuery({\n        query: CURRENT_USER_QUERY\n      });\n      console.log(data); //2 remove item from the cart\n\n      var cartItemId = payload.data.removeFromCart.id;\n      data.me.cart = data.me.cart.filter(function (cartItem) {\n        return cartItem.id !== cartItemId;\n      }); //3 write it back to the cache\n\n      cache.writeQuery({\n        query: CURRENT_USER_QUERY,\n        data: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(RemoveFromCart, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: REMOVE_FROM_CART_MUTATION,\n        variables: {\n          id: this.props.id\n        },\n        update: this.update //optimis\n        ,\n        optimisticResponse: {\n          __typename: 'Mutation',\n          removeFromCart: {\n            id: this.props.id\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, function (removeFromCart, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        return __jsx(BigButton, {\n          onClick: function onClick() {\n            removeFromCart()[\"catch\"](function (err) {\n              return alert(err.message);\n            });\n          },\n          title: \"Delete Item\",\n          disabled: loading,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }\n        }, \"\\xD7\");\n      });\n    }\n  }]);\n\n  return RemoveFromCart;\n}(Component);\n\n_defineProperty(RemoveFromCart, \"propTypes\", {\n  id: PropTypes.string.isRequired\n});\n\n; //end RemoveFromCart\n\nexport default RemoveFromCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BigButton\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/Tier-4/Advanced-React-master/sick-fits/frontend/components/RemoveFromCart.js"],"names":["React","Component","Mutation","gql","styled","PropTypes","CURRENT_USER_QUERY","REMOVE_FROM_CART_MUTATION","BigButton","button","props","theme","red","RemoveFromCart","cache","payload","console","log","data","readQuery","query","cartItemId","removeFromCart","id","me","cart","filter","cartItem","writeQuery","update","__typename","loading","error","err","alert","message","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,IAAMC,yBAAyB,GAAGJ,GAAH,mBAA/B,C,CAOE;;AAEF,IAAMK,SAAS,GAAGJ,MAAM,CAACK,MAAV;AAAA;AAAA;AAAA,oFAKE,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,GAAhB;AAAA,CALP,CAAf,C,CAQE;;KARIJ,S;;IAUAK,c;;;;;;;;;;;;;;;;6DAOO,UAACC,KAAD,EAAQC,OAAR,EAAoB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EADyB,CAEzB;;AACA,UAAMC,IAAI,GAAGJ,KAAK,CAACK,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEd;AAAT,OAAhB,CAAb;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAJyB,CAKzB;;AACA,UAAMG,UAAU,GAAGN,OAAO,CAACG,IAAR,CAAaI,cAAb,CAA4BC,EAA/C;AACAL,MAAAA,IAAI,CAACM,EAAL,CAAQC,IAAR,GAAeP,IAAI,CAACM,EAAL,CAAQC,IAAR,CAAaC,MAAb,CAAoB,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACJ,EAAT,KAAgBF,UAApB;AAAA,OAA5B,CAAf,CAPyB,CAQzB;;AACAP,MAAAA,KAAK,CAACc,UAAN,CAAiB;AAAER,QAAAA,KAAK,EAAEd,kBAAT;AAA6BY,QAAAA,IAAI,EAAJA;AAA7B,OAAjB;AACH,K;;;;;;;6BACQ;AAAA;;AACL,aACI,MAAC,QAAD;AACA,QAAA,QAAQ,EAAEX,yBADV;AAEA,QAAA,SAAS,EAAE;AAACgB,UAAAA,EAAE,EAAE,KAAKb,KAAL,CAAWa;AAAhB,SAFX;AAGA,QAAA,MAAM,EAAE,KAAKM,MAHb,CAIA;AAJA;AAKA,QAAA,kBAAkB,EAAE;AAChBC,UAAAA,UAAU,EAAE,UADI;AAEhBR,UAAAA,cAAc,EAAE;AACZC,YAAAA,EAAE,EAAE,KAAKb,KAAL,CAAWa;AADH;AAFA,SALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYK,UAACD,cAAD;AAAA,YAAkBS,OAAlB,QAAkBA,OAAlB;AAAA,YAA2BC,KAA3B,QAA2BA,KAA3B;AAAA,eACG,MAAC,SAAD;AACA,UAAA,OAAO,EAAE,mBAAM;AACXV,YAAAA,cAAc,WAAd,CAAuB,UAAAW,GAAG;AAAA,qBAAIC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAT;AAAA,aAA1B;AACH,WAHD;AAIA,UAAA,KAAK,EAAC,aAJN;AAKA,UAAA,QAAQ,EAAEJ,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AAAA,OAZL,CADJ;AAyBH;;;;EA5CwB9B,S;;gBAAvBY,c,eACiB;AACfU,EAAAA,EAAE,EAAElB,SAAS,CAAC+B,MAAV,CAAiBC;AADN,C;;AA4CtB,C,CAAC;;AAEF,eAAexB,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components'; \nimport PropTypes from 'prop-types';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst REMOVE_FROM_CART_MUTATION = gql `\n    mutation removeFromCart($id: ID!) {\n        removeFromCart(id: $id) {\n            # to remove from cache\n            id\n        }\n    }\n`;//end REMOVE_FROM_CART_MUTATION\n\nconst BigButton = styled.button`\n    font-size: 3rem;\n    background: none;\n    border: 0;\n    &:hover{\n        color: ${props => props.theme.red};\n        cursor: pointer;\n    }\n`;//end BigButton\n\nclass RemoveFromCart extends Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n    };\n    //this update function gets called as soon as we get a response from the server that the mutation has been performed\n    //cache is the apollo cache\n    //payload is the return from the server after the gql mutation\n    update = (cache, payload) => {\n        console.log('running remove from cart update function');\n        //1 read the cache\n        const data = cache.readQuery({ query: CURRENT_USER_QUERY});\n        console.log(data);\n        //2 remove item from the cart\n        const cartItemId = payload.data.removeFromCart.id;\n        data.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId)\n        //3 write it back to the cache\n        cache.writeQuery({ query: CURRENT_USER_QUERY, data});\n    }\n    render() {\n        return (\n            <Mutation \n            mutation={REMOVE_FROM_CART_MUTATION} \n            variables={{id: this.props.id}}\n            update={this.update}\n            //optimis\n            optimisticResponse={{\n                __typename: 'Mutation',\n                removeFromCart: {\n                    id: this.props.id,\n                },\n            }}\n            >\n                {(removeFromCart, {loading, error}) => \n                    <BigButton \n                    onClick={() => {\n                        removeFromCart().catch(err => alert(err.message));\n                    }}\n                    title=\"Delete Item\"\n                    disabled={loading}>\n                        &times;\n                    </BigButton>\n                }\n            </Mutation> \n        );\n    }\n};//end RemoveFromCart\n\nexport default RemoveFromCart;"]},"metadata":{},"sourceType":"module"}